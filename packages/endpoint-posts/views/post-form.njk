{% extends "form.njk" %}

{% set contentOptional =
  postType !== "article" and
  postType !== "note" and
  postType !== "reply" %}
{% set contentIgnored =
  postType === "like"
%}
{% set nameOptional =
  postType !== "article" and
  postType !== "bookmark" %}
{% set nameIgnored =
  postType === "note" or
  postType === "like" or
  postType === "reply" or
  postType === "rsvp"
%}

{% macro audioFieldset(index) %}
  {{ input({
    name: "audio[" + index + "]",
    type: "url",
    value: fieldData("audio[" + index + "]").value,
    label: __("posts.form.media.label"),
    attributes: {
      placeholder: "https://"
    },
    errorMessage: fieldData("audio[" + index + "]").errorMessage
  }) | indent(2) }}
{% endmacro %}

{% macro photoFieldset(index) %}
{% call fieldset({
  classes: "fieldset--group"
}) %}
  {{ input({
    name: "photo[" + index + "][url]",
    type: "url",
    value: fieldData("photo[" + index + "].url").value,
    label: __("posts.form.media.label"),
    attributes: {
      placeholder: "https://"
    },
    errorMessage: fieldData("photo[" + index + "].url").errorMessage
  }) | indent(2) }}

  {{ textarea({
    name: "photo[" + index + "][alt]",
    value: fieldData("photo[" + index + "].alt").value,
    label: __("posts.form.mp-photo-alt.label"),
    rows: 1,
    errorMessage: fieldData("photo[" + index + "].alt").errorMessage
  }) | indent(2) }}
{% endcall %}
{% endmacro %}

{% macro videoFieldset(index) %}
  {{ input({
    name: "video[" + index + "]",
    type: "url",
    value: fieldData("video[" + index + "]").value,
    label: __("posts.form.media.label"),
    attributes: {
      placeholder: "https://"
    },
    errorMessage: fieldData("video[" + index + "]").errorMessage
  }) | indent(2) }}
{% endmacro %}

{% block fieldset %}
  {{ input({
    name: "type",
    type: "hidden",
    value: "event" if postType === "event" else "entry"
  }) | indent(2) }}

  {{ input({
    name: "post-type",
    type: "hidden",
    value: postType
  }) | indent(2) }}

  {{ input({
    name: "bookmark-of",
    type: "url",
    value: fieldData("bookmark-of").value,
    label: __("posts.form.bookmark-of.label"),
    attributes: {
      placeholder: "https://"
    },
    errorMessage: fieldData("bookmark-of").errorMessage
  }) | indent(2) if postType === "bookmark" }}

  {{ input({
    name: "in-reply-to",
    type: "url",
    value: fieldData("in-reply-to").value,
    label: __("posts.form.in-reply-to.label"),
    attributes: {
      placeholder: "https://"
    },
    errorMessage: fieldData("in-reply-to").errorMessage
  }) | indent(2) if postType === "reply" or postType === "rsvp" }}

  {{ radios({
    classes: "radios--inline",
    name: "rsvp",
    values: properties.rsvp or "yes",
    fieldset: {
      legend: __("posts.form.rsvp.label")
    },
    items: [{
      label: __("posts.form.rsvp.yes"),
      value: "yes"
    }, {
      label: __("posts.form.rsvp.no"),
      value: "no"
    }, {
      label: __("posts.form.rsvp.maybe"),
      value: "maybe"
    }, {
      label: __("posts.form.rsvp.interested"),
      value: "interested"
    }]
  }) | indent(2) if postType === "rsvp" }}

  {{ input({
    name: "like-of",
    type: "url",
    value: fieldData("like-of").value,
    label: __("posts.form.like-of.label"),
    attributes: {
      placeholder: "https://"
    },
    errorMessage: fieldData("like-of").errorMessage
  }) | indent(2) if postType === "like" }}

  {{ input({
    name: "repost-of",
    type: "url",
    value: fieldData("repost-of").value,
    label: __("posts.form.repost-of.label"),
    attributes: {
      placeholder: "https://"
    },
    errorMessage: fieldData("repost-of").errorMessage
  }) | indent(2) if postType === "repost" }}

  {{ input({
    name: "name",
    value: fieldData("name").value,
    label: __("posts.form.name.label"),
    optional: nameOptional,
    errorMessage: fieldData("name").errorMessage
  }) | indent(2) if not nameIgnored }}

  {{ textarea({
    name: "content",
    value: fieldData("content").value or properties.content.text,
    label: __("posts.form.content.label"),
    optional: contentOptional,
    errorMessage: fieldData("content").errorMessage
  }) if not contentIgnored }}

  {{ textarea({
    name: "summary",
    value: properties.summary,
    label: __("posts.form.summary.label"),
    optional: true,
    rows: 1
  }) if postType === "article" }}

{% if postType === "audio" %}
{% call addAnother({
  fieldset: { legend: __("posts.form.audio.label") },
  name: __("posts.form.audio.name")
}) %}
  {% for audio in fieldData("audio").value %}
    {{ audioFieldset(loop.index0) }}
  {% else %}
    {{ audioFieldset(0) }}
  {% endfor %}
{% endcall %}
{% endif %}

{% if postType === "photo" %}
{% call addAnother({
  fieldset: { legend: __("posts.form.photo.label") },
  name: __("posts.form.photo.name")
}) %}
  {% for photo in fieldData("photo").value %}
    {{ photoFieldset(loop.index0) }}
  {% else %}
    {{ photoFieldset(0) }}
  {% endfor %}
{% endcall %}
{% endif %}

{% if postType === "video" %}
{% call addAnother({
  name: __("posts.form.video.name"),
  fieldset: { legend: __("posts.form.video.label") }
}) %}
  {% for video in fieldData("video").value %}
    {{ videoFieldset(loop.index0) }}
  {% else %}
    {{ videoFieldset(0) }}
  {% endfor %}
{% endcall %}
{% endif %}

  {{ checkboxes({
    name: "mp-syndicate-to",
    values: properties["mp-syndicate-to"],
    fieldset: {
      legend: __("posts.form.mp-syndicate-to.label")
    },
    items: syndicationTargetItems
  }) | indent(2) if syndicationTargetItems.length }}

  {% call details({
    open: showAdvancedOptions,
    summary: __("posts.form.advancedOptions")
  }) %}
    {{ radios({
      fieldset: {
        legend: __("posts.form.published.label")
      },
      name: "publication-date",
      values: fieldData("publication-date").value,
      items: [{
        label: __("posts.form.published.now"),
        value: "now",
        checked: true
      }, {
        label: __("posts.form.published.scheduled"),
        value: "scheduled",
        conditional: input({
          name: "published",
          type: "datetime-local",
          label: __("posts.form.published.label")
        })
      }]
    }) if postStatus !== "published" else input({
      name: "published",
      value: fieldData("published").value | localDate(application.timeZone),
      type: "datetime-local",
      label: __("posts.form.published.label")
    }) | indent(4) }}

    {{ radios({
      classes: "radios--inline",
      name: "visibility",
      values: properties.visibility or "public",
      fieldset: {
        legend: __("posts.form.visibility.label")
      },
      items: [{
        label: __("posts.status.public"),
        value: "public"
      }, {
        label: __("posts.status.private"),
        value: "private"
      }, {
        label: __("posts.status.unlisted"),
        value: "unlisted"
      }]
    }) | indent(4) }}

    {{ tagInput({
      name: "category",
      value: fieldData("category").value,
      label: __("posts.form.category.label"),
      hint: __("posts.form.category.hint"),
      optional: true,
      localisation: {
        tag: __("posts.form.category.tag"),
        tags: __("posts.form.category.label") | lower
      }
    }) | indent(4) }}

    {{ geoInput({
      name: "geo",
      value: fieldData("geo").value,
      label: __("posts.form.geo.label"),
      hint: __("posts.form.geo.hint", "50.8211, -0.1452"),
      optional: true,
      errorMessage: fieldData("geo").errorMessage
    }) | indent(4) }}

    {{ input({
      classes: "input--width-25",
      name: "mp-slug",
      value: fieldData("mp-slug").value,
      label: __("posts.form.mp-slug.label"),
      optional: true
    }) | indent(4) }}
  {% endcall %}
{% endblock %}

{% block buttons %}
  <div class="button-group">
    {{ button({
      name: "post-status",
      value: "published",
      text: __("posts.form.update") if postStatus === "published" else __("posts.form.publish")
    }) | indent(4) if not draftMode }}

    {{ button({
      name: "post-status",
      value: "draft",
      classes: "button--secondary",
      text: __("posts.form.updateDraft") if postStatus === "draft" else __("posts.form.publishDraft")
    }) | indent(4) if postStatus !== "published" }}

    {{ prose({
      text: "[" + __("posts.form.cancel") + "](" + postsPath + ")"
    }) | indent(4) }}
  </div>
{% endblock %}