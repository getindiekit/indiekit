{% extends "form.njk" %}

{% set contentOptional =
  postType !== "article" and
  postType !== "note" and
  postType !== "reply" %}
{% set contentIgnored =
  postType === "like"
%}
{% set nameOptional =
  postType !== "article" and
  postType !== "bookmark" %}
{% set nameIgnored =
  postType === "note" or
  postType === "like" or
  postType === "reply" or
  postType === "rsvp"
%}

{% set geo = [post.location.latitude, post.location.longitude] | join(",") if post.location %}

{% block fieldset %}
  {{ input({
    name: "type",
    type: "hidden",
    value: "event" if postType === "event" else "entry"
  }) | indent(2) }}

  {{ input({
    name: "post-type",
    type: "hidden",
    value: postType
  }) | indent(2) }}

  {{ input({
    id: "bookmark-of",
    name: "bookmark-of",
    value: errors["bookmark-of"].value or post["bookmark-of"],
    label: {
      text: __("posts.form.bookmark-of.label")
    },
    errorMessage: {
      text: errors["bookmark-of"].msg
    } if errors["bookmark-of"]
  }) | indent(2) if postType === "bookmark" }}

  {{ input({
    id: "in-reply-to",
    name: "in-reply-to",
    value: errors["in-reply-to"].value or post["in-reply-to"],
    label: {
      text: __("posts.form.in-reply-to.label")
    },
    errorMessage: {
      text: errors["in-reply-to"].msg
    } if errors["in-reply-to"]
  }) | indent(2) if postType === "reply" or postType === "rsvp" }}

  {{ radios({
    classes: "radios--inline",
    idPrefix: "rsvp",
    name: "rsvp",
    values: post.rsvp or "yes",
    fieldset: {
      legend: {
        text: __("posts.form.rsvp.label")
      }
    },
    items: [{
      text: __("posts.form.rsvp.yes"),
      value: "yes"
    }, {
      text: __("posts.form.rsvp.no"),
      value: "no"
    }, {
      text: __("posts.form.rsvp.maybe"),
      value: "maybe"
    }, {
      text: __("posts.form.rsvp.interested"),
      value: "interested"
    }]
  }) | indent(2) if postType === "rsvp" }}

  {{ input({
    id: "like-of",
    name: "like-of",
    value: errors["like-of"].value or post["like-of"],
    label: {
      text: __("posts.form.like-of.label")
    },
    errorMessage: {
      text: errors["like-of"].msg
    } if errors["like-of"]
  }) | indent(2) if postType === "like" }}

  {{ input({
    id: "repost-of",
    name: "repost-of",
    value: errors["repost-of"].value or post["repost-of"],
    label: {
      text: __("posts.form.repost-of.label")
    },
    errorMessage: {
      text: errors["repost-of"].msg
    } if errors["repost-of"]
  }) | indent(2) if postType === "repost" }}

  {{ input({
    id: "name",
    name: "name",
    value: errors.name.value or post.name,
    label: {
      text: __("posts.form.name.label")
    },
    optional: nameOptional,
    errorMessage: {
      text: errors.name.msg
    } if errors.name
  }) | indent(2) if not nameIgnored }}

  {{ textarea({
    id: "content",
    name: "content",
    value: errors.content.value or post.content.text,
    label: {
      text: __("posts.form.content.label")
    },
    optional: contentOptional,
    errorMessage: {
      text: errors.content.msg
    } if errors.content
  }) if not contentIgnored }}

  {{ textarea({
    id: "summary",
    name: "summary",
    value: post.summary,
    label: {
      text: __("posts.form.summary.label")
    },
    optional: true,
    rows: 1
  }) if postType === "article" }}

  {{ checkboxes({
    idPrefix: "mp-syndicate-to",
    name: "mp-syndicate-to",
    values: post["mp-syndicate-to"],
    fieldset: {
      legend: {
        text: __("posts.form.mp-syndicate-to.label")
      }
    },
    items: syndicationTargetItems
  }) | indent(2) if syndicationTargetItems.length }}

  {% call details({
    open: showAdvancedOptions,
    summary: __("posts.form.advancedOptions")
  }) %}
    {{ tokenInput({
      id: "category",
      name: "category",
      value: errors.category.value or post.category,
      label: {
        text: __("posts.form.category.label")
      },
      optional: true,
      items: publication.categories
    }) | indent(4) }}

    {{ geoInput({
      id: "geo",
      name: "geo",
      value: errors.geo.value or geo,
      label: {
        text: __("posts.form.geo.label")
      },
      hint: {
        text: __("posts.form.geo.hint", "50.8211, -0.1452")
      },
      optional: true,
      errorMessage: {
        text: errors.geo.msg
      } if errors.geo
    }) | indent(4) }}

    {{ input({
      classes: "input--width-25",
      id: "mp-slug",
      name: "mp-slug",
      value: errors["mp-slug"].value or post["mp-slug"],
      label: {
        text: __("posts.form.mp-slug.label")
      },
      optional: true,
      attributes: {
        readonly: true if post["mp-slug"]
      }
    }) | indent(4) }}

    {{ radios({
      classes: "radios--inline",
      idPrefix: "visibility",
      name: "visibility",
      values: post.visibility or "public",
      fieldset: {
        legend: {
          text: __("posts.form.visibility.label")
        }
      },
      items: [{
        text: __("posts.status.public"),
        value: "public"
      }, {
        text: __("posts.status.private"),
        value: "private"
      }, {
        text: __("posts.status.unlisted"),
        value: "unlisted"
      }]
    }) | indent(4) }}
  {% endcall %}
{% endblock %}

{% block buttons %}
  <div class="button-group">
    {{ button({
      name: "post-status",
      value: "published",
      text: __("posts.form.update") if postStatus === "published" else __("posts.form.publish")
    }) | indent(4) if not draftMode }}

    {{ button({
      name: "post-status",
      value: "draft",
      classes: "button--secondary",
      text: __("posts.form.updateDraft") if postStatus === "draft" else __("posts.form.publishDraft")
    }) | indent(4) if postStatus !== "published" }}

    {{ prose({
      text: "[" + __("posts.form.cancel") + "](" + postsPath + ")"
    }) | indent(4) }}
  </div>
{% endblock %}