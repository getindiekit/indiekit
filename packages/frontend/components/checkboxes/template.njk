{% from "../error-message/macro.njk" import errorMessage with context %}
{% from "../fieldset/macro.njk" import fieldset with context %}
{% from "../field/macro.njk" import field with context %}
{% from "../hint/macro.njk" import hint with context %}
{% from "../label/macro.njk" import label with context %}
{# If `idPrefix` not passed, fallback to using name attribute instead.
   We need this for error messages and hints. #}
{%- set idPrefix = opts.idPrefix if opts.idPrefix else opts.name %}
{# A record of other elements we need to associate with the input using
   `aria-describedby`, for example error messages or hints. #}
{%- set describedBy = opts.describedBy if opts.describedBy else "" %}
{%- if opts.fieldset.describedBy %}
  {%- set describedBy = opts.fieldset.describedBy %}
{%- endif %}
{# `fieldset` is false by default #}
{%- set hasFieldset = true if opts.fieldset else false %}
{# Capture the HTML so we can optionally nest it within a fieldset #}
{%- set innerHtml %}
{% if opts.hint %}
  {% set hintId = idPrefix + "-hint" %}
  {% set describedBy = describedBy + " " + hintId if describedBy else hintId %}
  {{ hint({
    id: hintId,
    text: opts.hint
  }) | trim }}
{% endif %}
{% if opts.errorMessage %}
  {% set errorId = idPrefix + "-error" %}
  {% set describedBy = describedBy + " " + errorId if describedBy else errorId %}
  {{ errorMessage({
    id: errorId,
    classes: opts.errorMessage.classes,
    attributes: opts.errorMessage.attributes,
    text: opts.errorMessage.text,
    visuallyHiddenText: opts.errorMessage.visuallyHiddenText
  }) | indent(2) | trim }}
{%- endif %}
{% for item in opts.items %}{% if item %}
  {% set id = itemId(item.id, idPrefix, loop) %}
  {% set name = item.name if item.name else opts.name %}
  {% set conditionalId = "conditional-" + id %}
  {% if item.divider %}
  <div class="checkboxes__divider">{{ item.divider }}</div>
  {% else %}
  {% set isChecked = item.checked | default(opts.values and item.value in opts.values) %}
  {% set itemHintId = id + "-item-hint" if item.hint else "" %}
  {% set itemDescribedBy = describedBy if not hasFieldset else "" %}
  {% set itemDescribedBy = (itemDescribedBy + " " + itemHintId) | trim %}
  <div class="checkboxes__item">
    <input class="checkboxes__input" id="{{ id }}" name="{{ name }}" type="checkbox" value="{{ item.value }}"
    {{-" checked" if isChecked }}
    {{-" disabled" if item.disabled }}
    {%- if item.conditional %} data-aria-controls="{{ conditionalId }}"{% endif -%}
    {%- if item.behaviour %} data-behaviour="{{ item.behaviour }}"{% endif -%}
    {%- if itemDescribedBy %} aria-describedby="{{ itemDescribedBy }}"{% endif -%}
    {{- attributes(opts.attributes) }}>
    {{ label({
      classes: "checkboxes__label",
      for: id,
      text: item.label
    }) }}
    {{ hint({
      classes: "checkboxes__hint",
      id: itemHintId,
      text: item.hint
    }) if item.hint }}
  </div>
  {% if item.conditional %}
  <div class="checkboxes__conditional{{ " checkboxes__conditional--hidden" if not isChecked }}" id="{{ conditionalId }}">
    {{ item.conditional | safe }}
  </div>
  {% endif %}
  {% endif %}
{% endif %}{% endfor %}
{% endset %}
{% call field({
  element: "checkboxes-field",
  classes: opts.field.classes,
  errorMessage: opts.errorMessage
}) %}
{% if opts.fieldset %}
  {% call fieldset({
    describedBy: describedBy,
    classes: opts.fieldset.classes,
    attributes: opts.fieldset.attributes,
    legend: opts.fieldset.legend
  }) %}{{ innerHtml | trim | safe }}{% endcall %}
{% else %}
  {{ innerHtml | trim | safe }}
{% endif %}
{% endcall %}