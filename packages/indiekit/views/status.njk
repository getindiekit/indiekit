{% extends "document.njk" %}

{%- set postTypesHtml %}
  <ul role="list">{% for type, config in publication.postTypes | dictsort %}
    <li>
      {{ icon(type) or icon("note") }}{{ config.name }}
      <small><code class="token attr-name">{{ type }}</code></small>
    </li>
  {% endfor %}</ul>
{% endset -%}

{%- macro syndicationTargetsHtml(card) %}
{% for target in publication.syndicationTargets %}
  {{ card({
    photo: {
      srcOnError: "/assets/plug-in.svg",
      attributes: { height: 68, width: 68 },
      url: "/assets/" + target.id + "/icon.svg"
    },
    headingLevel: 3,
    title: target.name,
    description: target.info.uid,
    url: "/plugins/" + target.id
  }) }}
{% endfor %}
{% endmacro -%}

{%- set versionHtml %}
  <a href="{{ application.repository.url | replace(".git", "") + "/releases/tag/v" + application.version }}">
    {{ "v" + application.version }}
  </a>
{% endset -%}

{%- set localeHtml %}
  <p>{{ application.localeUsed.split("-") | first | languageNativeName }}</p>
  {% if application.locale and (application.locale !== application.localeUsed) %}
    <p class="summary__note">{{ __("status.application.localeNotAvailable", {
      app: application.name,
      locale: application.locale.split("-") | first | languageName
    }) }}</p>
  {% endif %}
{% endset -%}

{%- set permissionsHtml %}
  <ul role="list">{% for scope in scope %}
    <li>
      {{ __("scope." + scope + ".label") }}
      <small><code class="token attr-name">{{ scope }}</code></small>
    </li>
  {% endfor %}</ul>
{% endset -%}

{% block content %}
  {% call section({ title: __("status.publication.summaryTitle") }) %}
    {{ summary({
      rows: [{
        key: {
          text: __("status.publication.me")
        },
        value: {
          text: publication.me | urlize
        }
      }, {
        key: {
          text: __("status.publication.locale")
        },
        value: {
          text: publication.locale.split("-") | first | languageNativeName
        }
      }, {
        key: {
          text: __("status.publication.postTypes")
        },
        value: {
          text: postTypesHtml | indent(4)
        }
      }, {
        key: {
          text: __("status.publication.preset")
        },
        value: {
          text: card({
            photo: {
              srcOnError: "/assets/plug-in.svg",
              attributes: { height: 68, width: 68 },
              url: "/assets/" + publication.preset.id + "/icon.svg"
            },
            headingLevel: 3,
            title: publication.preset.name,
            url: "/plugins/" + publication.preset.id
          })
        }
      } if publication.preset, {
        key: {
          text: __("status.publication.store")
        },
        value: {
          text: card({
            photo: {
              srcOnError: "/assets/plug-in.svg",
              attributes: { height: 68, width: 68 },
              url: "/assets/" + publication.store.id + "/icon.svg"
            },
            headingLevel: 3,
            title: publication.store.name,
            description: publication.store.info.uid,
            url: "/plugins/" + publication.store.id
          })
        }
      } if publication.store, {
        key: {
          text: __("status.publication.mediaStore")
        },
        value: {
          text: card({
            photo: {
              srcOnError: "/assets/plug-in.svg",
              attributes: { height: 68, width: 68 },
              url: "/assets/" + publication.mediaStore.id + "/icon.svg"
            },
            headingLevel: 3,
            title: publication.mediaStore.name,
            description: publication.mediaStore.info.uid,
            url: "/plugins/" + publication.mediaStore.id
          })
        }
      } if publication.mediaStore, {
        key: {
          text: __("status.publication.syndicationTargets")
        },
        value: {
          text: syndicationTargetsHtml(card) | indent(4)
        }
      } if publication.syndicationTargets.length > 0]
    }) }}
  {% endcall %}

  {% call section({
    title: __("status.application.summaryTitle")
  }) %}
    {{ summary({
      rows: [{
        key: {
          text: __("status.application.name")
        },
        value: {
          text: application.name
        }
      }, {
        key: {
          text: __("status.application.version")
        },
        value: {
          text: versionHtml
        }
      }, {
        key: {
          text: __("status.application.locale")
        },
        value: {
          text: localeHtml
        }
      }, {
        key: {
          text: __("status.application.timeZone")
        },
        value: {
          text: application.timeZone
        }
      }, {
        key: {
          text: __("scope.label")
        },
        value: {
          text: permissionsHtml if scope else __("scope.none.label")
        }
      }, {
        key: {
          id: "access-token",
          text: __("status.application.accessToken")
        },
        value: {
          text: textarea({
            classes: "textarea--monospace",
            describedBy: "access-token",
            value: token,
            attributes: {
              readonly: true,
              onclick: "this.select();"
            }
          })
        }
      } if token, {
        key: {
          text: __("status.application.themeColorScheme")
        },
        value: {
          text: __("status.application.themeColorSchemeValue." + application.themeColorScheme)
        }
      }, {
        key: {
          text: __("status.application.themeColor")
        },
        value: {
          text: '<span style="color:' + application.themeColor + '" aria-hidden="true">‚óè</span> ' + application.themeColor
        }
      }]
    }) }}
  {% endcall %}
{% endblock %}