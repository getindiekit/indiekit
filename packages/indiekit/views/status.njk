{% extends "document.njk" %}

{%- set presetHtml %}
  <img class="icon icon--rounded" src="{{ "/assets/" + publication.preset.id + "/icon.svg" }}" onerror="this.src='/assets/plug-in.svg'">{{ publication.preset.info.name }}
{% endset -%}

{%- set postTypesHtml %}
  <ul role="list">{% for config in publication.postTypes %}
    <li>
      {{ icon(config.type) or icon("note") }}{{ config.name }}
      <small><code class="token attr-name">{{ config.type }}</code></small>
    </li>
  {% endfor %}</ul>
{% endset -%}

{%- set storeHtml %}
  <a href="{{ publication.store.info.uid }}">
    <img class="icon icon--rounded" src="{{ "/assets/" + publication.store.id + "/icon.svg" }}" onerror="this.src='/assets/plug-in.svg'">{{ publication.store.info.name }}
  </a>
{% endset -%}

{%- set syndicationTargetsHtml %}
  <ul role="list">{% for target in publication.syndicationTargets %}
    <li>
      <a href="{{ target.info.uid }}">
        {%- if target.info.service.photo %}<img class="icon icon--rounded" src="{{ target.info.service.photo }}" width="24" height="24" alt="">{% endif -%}{{ target.info.name }}
      </a>
    </li>
  {% endfor %}</ul>
{% endset -%}

{%- set versionHtml %}
  <a href="{{ application.repository.url | replace(".git", "") + "/releases/tag/v" + application.version }}">
    {{ "v" + application.version }}
  </a>
{% endset -%}

{%- set localeHtml %}
  <p>{{ application.localeUsed.split("-") | first | languageNativeName }}</p>
  {% if application.locale and (application.locale !== application.localeUsed) %}
    <p class="summary__note">{{ __("status.application.localeNotAvailable", {
      app: application.name,
      locale: application.locale.split("-") | first | languageName
    }) }}</p>
  {% endif %}
{% endset -%}

{%- set permissionsHtml %}
  <ul role="list">{% for scope in scope %}
    <li>
      {{ __("scope." + scope + ".label") }}
      <small><code class="token attr-name">{{ scope }}</code></small>
    </li>
  {% endfor %}</ul>
{% endset -%}

{% block content %}
  {% call section({ title: __("status.publication.summaryTitle") }) %}
    {{ summary({
      rows: [{
        key: {
          text: __("status.publication.me")
        },
        value: {
          text: publication.me | urlize
        }
      }, {
        key: {
          text: __("status.publication.locale")
        },
        value: {
          text: publication.locale.split("-") | first | languageNativeName
        }
      }, {
        key: {
          text: __("status.publication.preset")
        },
        value: {
          text: presetHtml | indent(4)
        }
      } if publication.preset, {
        key: {
          text: __("status.publication.postTypes")
        },
        value: {
          text: postTypesHtml | indent(4)
        }
      } if publication.postTypes.length > 0, {
        key: {
          text: __("status.publication.store")
        },
        value: {
          text: storeHtml
        }
      } if publication.store, {
        key: {
          text: __("status.publication.syndicationTargets")
        },
        value: {
          text: syndicationTargetsHtml | indent(4)
        }
      } if publication.syndicationTargets.length > 0]
    }) }}
  {% endcall %}

  {% call section({
    title: __("status.application.summaryTitle")
  }) %}
    {{ summary({
      rows: [{
        key: {
          text: __("status.application.name")
        },
        value: {
          text: application.name
        }
      }, {
        key: {
          text: __("status.application.version")
        },
        value: {
          text: versionHtml
        }
      }, {
        key: {
          text: __("status.application.locale")
        },
        value: {
          text: localeHtml
        }
      }, {
        key: {
          text: __("status.application.timeZone")
        },
        value: {
          text: application.timeZone
        }
      }, {
        key: {
          text: __("scope.label")
        },
        value: {
          text: permissionsHtml if scope else __("scope.none.label")
        }
      }, {
        key: {
          text: __("status.application.accessToken")
        },
        value: {
          text: textarea({
            classes: "textarea--monospace",
            label: {
              classes: "-!-visually-hidden",
              text: __("status.application.accessToken")
            },
            value: token,
            attributes: {
              readonly: true,
              onclick: "this.select();"
            }
          })
        }
      } if token, {
        key: {
          text: __("status.application.themeColorScheme")
        },
        value: {
          text: __("status.application.themeColorSchemeValue." + application.themeColorScheme)
        }
      }, {
        key: {
          text: __("status.application.themeColor")
        },
        value: {
          text: '<span style="color:' + application.themeColor + '" aria-hidden="true">‚óè</span> ' + application.themeColor
        }
      }]
    }) }}
  {% endcall %}
{% endblock %}